name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: demo1
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3a: Set executable permission for gradlew
      - name: Set Gradlew Permissions
        run: chmod +x ./gradlew

      # Step 3b: Set up gradle cache
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # Step 4: Build the application
      - name: Build Application
        run: ./gradlew clean build --info
        id: build

      - name: Run unit and integration tests
        run: ./gradlew test

      - name: Preview Liquibase SQL
        id: liquibase_preview
        run: |
          ./gradlew updateSQL --args="--changeLogFile=src/main/resources/db/changelog/db.changelog-master.xml" > liquibase_sql_preview.txt
          echo "Preview the SQL changes."
          cat liquibase_sql_preview.txt

      - name: Liquibase Approval - Manual Input
        id: approval
        run: |
          echo "Do you approve the changes to apply to the database? (yes/no)"
          read APPROVAL
          if [[ "$APPROVAL" != "yes" ]]; then
            echo "Approval denied. Stopping deployment."
            exit 1
          fi
          echo "Approval granted. Proceeding with database updates."

      - name: Apply Liquibase Changes
        if: steps.approval.outputs.result == 'yes'
        run: |
          echo "Applying Liquibase changes to the database. "
          ./gradlew update
